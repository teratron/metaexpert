[project]
name = "metaexpert"
version = "0.1.0"
description = "MetaExpert library"
authors = [{ name = "Oleg Alexandrov", email = "alexandrovoleg.ru@gmail.com" }]
license = { text = "MIT License" }
readme = "README.md"
requires-python = ">=3.12"
#classifiers = ["Private :: Do Not Upload"]
keywords = ["trading", "crypto", "binance", "ta-lib", "technical analysis"]
#excluded = ["tests", "examples", "app", "docs", "src/data"]
dependencies = [
    "matplotlib>=3.10.3",
    #"binance-connector>=3.12.0",
    #"pybit>=5.10.1",
    #"flask>=3.1.0",
    #"lightweight-charts>=2.1",
    "numpy>=2.2.5",
    "pandas>=2.2.3",
    #"ta-lib==0.6.3",
    "websocket-client>=1.8.0",
]

[project.urls]
homepage = "https://teratron.github.io/metaexpert"
documentation = "https://teratron.github.io/metaexpert/docs"
github = "https://github.com/teratron/metaexpert"
repository = "https://github.com/teratron/metaexpert.git"

[project.scripts]
metaexpert = "metaexpert.__main__:main"
#expert-ema = "examples/expert_ema:main"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "python-dotenv-vault>=0.6.4",
]
test = [
    "pytest>=8.3.4",
]
lint = [
    "ruff>=0.11.4",
]
docs = []

[tool.uv]
package = true
link-mode = "copy"
default-groups = [
    "dev",
    "test",
    "lint",
    "docs",
]

[tool.uv.sources]
#metaexpert-binance-api = { path = "packages/api/binance" }
#metaexpert-bybit-api = { path = "packages/api/bybit" }
#metaexpert-binance-api = { workspace = true }
#metaexpert-bybit-api = { workspace = true }
metaexpert-examples = { path = "examples" }

[tool.uv.workspace]
members = [
    "packages/app",
    #"src/metaexpert",
    #"packages/api/binance",
    #"packages/api/bybit",
    #"examples",
]

[tool.ruff]
line-length = 99
src = [
    #"src",
    #"app/src",
    #"examples/src",
    "tests",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
