{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Git Pull",
            "type": "shell",
            "command": "git pull",
            "presentation": {
                "reveal": "always",
                "close": true
            },
            "problemMatcher": []
        },
        {
            "label": "Activate Venv",
            "type": "shell",
            "command": "${command:workbench.action.terminal.new}",
            "windows": {
                "command": ".venv\\Scripts\\activate"
            },
            "linux": {
                "command": ". .venv/bin/activate"
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Update UV",
            "type": "shell",
            "command": "uv self update",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "uv sync",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Install All Dependencies",
            "type": "shell",
            "command": "uv sync --all-extras",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Update Claude",
            "type": "shell",
            "command": "npm install -g @anthropic-ai/claude-code",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Update Gemini",
            "type": "shell",
            "command": "npm install -g @google/gemini-cli",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Update Qwen",
            "type": "shell",
            "command": "npm install -g @qwen-code/qwen-code",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Lint",
            "type": "shell",
            "command": "uv run ruff check .",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Format",
            "type": "shell",
            "command": "uv run ruff format .",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Test",
            "type": "shell",
            "command": "uv run pytest",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Binance EMA Expert",
            "type": "shell",
            "command": "uv run python examples/expert_binance_ema/__main__.py",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Bybit RSI Expert",
            "type": "shell",
            "command": "uv run python examples/expert_bybit_rsi/__main__.py",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Flask App",
            "type": "shell",
            "command": "cd packages/app && uv run python src/app.py",
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "isBackground": true
        }
    ]
}